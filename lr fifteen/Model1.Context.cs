//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lr_fifteen
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ip521_SofronovEntities : DbContext
    {
        public ip521_SofronovEntities()
            : base("name=ip521_SofronovEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<groups> groups { get; set; }
        public virtual DbSet<students> students { get; set; }
        public virtual DbSet<uspev> uspev { get; set; }
        public virtual DbSet<Абитуриенты> Абитуриенты { get; set; }
        public virtual DbSet<Абитуриенты2> Абитуриенты2 { get; set; }
        public virtual DbSet<Дисциплины> Дисциплины { get; set; }
        public virtual DbSet<Журнал> Журнал { get; set; }
        public virtual DbSet<Заявления> Заявления { get; set; }
        public virtual DbSet<Оценки> Оценки { get; set; }
        public virtual DbSet<Специальности> Специальности { get; set; }
        public virtual DbSet<Экзамены> Экзамены { get; set; }
        public virtual DbSet<Абитуриенты__баллы_> Абитуриенты__баллы_ { get; set; }
        public virtual DbSet<Абитуриенты__зачислены_> Абитуриенты__зачислены_ { get; set; }
        public virtual DbSet<Абитуриенты__на_специальность_> Абитуриенты__на_специальность_ { get; set; }
        public virtual DbSet<Абитуриенты__общежитие_> Абитуриенты__общежитие_ { get; set; }
        public virtual DbSet<Абитуриенты__по_городам_> Абитуриенты__по_городам_ { get; set; }
        public virtual DbSet<Абитуриенты__экзаменов_> Абитуриенты__экзаменов_ { get; set; }
        public virtual DbSet<Заявления_на_специальность> Заявления_на_специальность { get; set; }
        public virtual DbSet<Специальность__зачисленных_> Специальность__зачисленных_ { get; set; }
        public virtual DbSet<Специальность__экзаменов_> Специальность__экзаменов_ { get; set; }
    
        public virtual ObjectResult<Grade_Select_Course_Result> Grade_Select_Course(Nullable<int> courseId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grade_Select_Course_Result>("Grade_Select_Course", courseIdParameter);
        }
    
        public virtual ObjectResult<Grade_Select_Faculty_Result> Grade_Select_Faculty(Nullable<int> код_специальности)
        {
            var код_специальностиParameter = код_специальности.HasValue ?
                new ObjectParameter("Код_специальности", код_специальности) :
                new ObjectParameter("Код_специальности", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grade_Select_Faculty_Result>("Grade_Select_Faculty", код_специальностиParameter);
        }
    
        public virtual ObjectResult<p1_Result> p1(string gr)
        {
            var grParameter = gr != null ?
                new ObjectParameter("gr", gr) :
                new ObjectParameter("gr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p1_Result>("p1", grParameter);
        }
    
        public virtual ObjectResult<p12_Result> p12(string gr)
        {
            var grParameter = gr != null ?
                new ObjectParameter("gr", gr) :
                new ObjectParameter("gr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p12_Result>("p12", grParameter);
        }
    
        public virtual ObjectResult<procedure1_Result> procedure1(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedure1_Result>("procedure1", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<procedure12_Result> procedure12(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedure12_Result>("procedure12", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<procedure123_Result> procedure123(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedure123_Result>("procedure123", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<procedure1234_Result> procedure1234(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedure1234_Result>("procedure1234", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<procedure12345_Result> procedure12345(Nullable<int> id, string fam)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var famParameter = fam != null ?
                new ObjectParameter("fam", fam) :
                new ObjectParameter("fam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedure12345_Result>("procedure12345", idParameter, famParameter);
        }
    
        public virtual int procedure123456(Nullable<byte> id, string fam, string gr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(byte));
    
            var famParameter = fam != null ?
                new ObjectParameter("fam", fam) :
                new ObjectParameter("fam", typeof(string));
    
            var grParameter = gr != null ?
                new ObjectParameter("gr", gr) :
                new ObjectParameter("gr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procedure123456", idParameter, famParameter, grParameter);
        }
    
        public virtual ObjectResult<Student_Select_Faculty_Result> Student_Select_Faculty(Nullable<int> код_специальности)
        {
            var код_специальностиParameter = код_специальности.HasValue ?
                new ObjectParameter("Код_специальности", код_специальности) :
                new ObjectParameter("Код_специальности", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student_Select_Faculty_Result>("Student_Select_Faculty", код_специальностиParameter);
        }
    
        public virtual int Абитуриент_Delete(Nullable<int> код_абитуриента)
        {
            var код_абитуриентаParameter = код_абитуриента.HasValue ?
                new ObjectParameter("Код_абитуриента", код_абитуриента) :
                new ObjectParameter("Код_абитуриента", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Абитуриент_Delete", код_абитуриентаParameter);
        }
    
        public virtual int Абитуриент_Delete1(Nullable<int> абитуриент)
        {
            var абитуриентParameter = абитуриент.HasValue ?
                new ObjectParameter("Абитуриент", абитуриент) :
                new ObjectParameter("Абитуриент", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Абитуриент_Delete1", абитуриентParameter);
        }
    
        public virtual int Абитуриент_Insert(string фамилия, string имя, string отчество, string статус, string город)
        {
            var фамилияParameter = фамилия != null ?
                new ObjectParameter("Фамилия", фамилия) :
                new ObjectParameter("Фамилия", typeof(string));
    
            var имяParameter = имя != null ?
                new ObjectParameter("Имя", имя) :
                new ObjectParameter("Имя", typeof(string));
    
            var отчествоParameter = отчество != null ?
                new ObjectParameter("Отчество", отчество) :
                new ObjectParameter("Отчество", typeof(string));
    
            var статусParameter = статус != null ?
                new ObjectParameter("Статус", статус) :
                new ObjectParameter("Статус", typeof(string));
    
            var городParameter = город != null ?
                new ObjectParameter("Город", город) :
                new ObjectParameter("Город", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Абитуриент_Insert", фамилияParameter, имяParameter, отчествоParameter, статусParameter, городParameter);
        }
    
        public virtual int Абитуриент_Update(Nullable<int> код_абитуриента, string фамилия, string имя, string отчество, string статус, string город)
        {
            var код_абитуриентаParameter = код_абитуриента.HasValue ?
                new ObjectParameter("Код_абитуриента", код_абитуриента) :
                new ObjectParameter("Код_абитуриента", typeof(int));
    
            var фамилияParameter = фамилия != null ?
                new ObjectParameter("Фамилия", фамилия) :
                new ObjectParameter("Фамилия", typeof(string));
    
            var имяParameter = имя != null ?
                new ObjectParameter("Имя", имя) :
                new ObjectParameter("Имя", typeof(string));
    
            var отчествоParameter = отчество != null ?
                new ObjectParameter("Отчество", отчество) :
                new ObjectParameter("Отчество", typeof(string));
    
            var статусParameter = статус != null ?
                new ObjectParameter("Статус", статус) :
                new ObjectParameter("Статус", typeof(string));
    
            var городParameter = город != null ?
                new ObjectParameter("Город", город) :
                new ObjectParameter("Город", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Абитуриент_Update", код_абитуриентаParameter, фамилияParameter, имяParameter, отчествоParameter, статусParameter, городParameter);
        }
    
        public virtual int Дисциплина_Delete(Nullable<int> код_дисциплины)
        {
            var код_дисциплиныParameter = код_дисциплины.HasValue ?
                new ObjectParameter("Код_дисциплины", код_дисциплины) :
                new ObjectParameter("Код_дисциплины", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Дисциплина_Delete", код_дисциплиныParameter);
        }
    
        public virtual int Дисциплина_Insert(string название)
        {
            var названиеParameter = название != null ?
                new ObjectParameter("Название", название) :
                new ObjectParameter("Название", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Дисциплина_Insert", названиеParameter);
        }
    
        public virtual int Заявление_Insert(Nullable<int> код_абитуриента, Nullable<int> код_специальности, string статус)
        {
            var код_абитуриентаParameter = код_абитуриента.HasValue ?
                new ObjectParameter("Код_абитуриента", код_абитуриента) :
                new ObjectParameter("Код_абитуриента", typeof(int));
    
            var код_специальностиParameter = код_специальности.HasValue ?
                new ObjectParameter("Код_специальности", код_специальности) :
                new ObjectParameter("Код_специальности", typeof(int));
    
            var статусParameter = статус != null ?
                new ObjectParameter("Статус", статус) :
                new ObjectParameter("Статус", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Заявление_Insert", код_абитуриентаParameter, код_специальностиParameter, статусParameter);
        }
    
        public virtual int Специальность_Delete(Nullable<int> код_специальности)
        {
            var код_специальностиParameter = код_специальности.HasValue ?
                new ObjectParameter("Код_специальности", код_специальности) :
                new ObjectParameter("Код_специальности", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Специальность_Delete", код_специальностиParameter);
        }
    
        public virtual int Специальность_Update(Nullable<int> специальность)
        {
            var специальностьParameter = специальность.HasValue ?
                new ObjectParameter("Специальность", специальность) :
                new ObjectParameter("Специальность", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Специальность_Update", специальностьParameter);
        }
    
        public virtual int Экзамен_Delete(Nullable<int> код_экзамена)
        {
            var код_экзаменаParameter = код_экзамена.HasValue ?
                new ObjectParameter("Код_экзамена", код_экзамена) :
                new ObjectParameter("Код_экзамена", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Экзамен_Delete", код_экзаменаParameter);
        }
    
        public virtual int Экзамен_Delete1(Nullable<int> код_экзамен)
        {
            var код_экзаменParameter = код_экзамен.HasValue ?
                new ObjectParameter("Код_экзамен", код_экзамен) :
                new ObjectParameter("Код_экзамен", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Экзамен_Delete1", код_экзаменParameter);
        }
    
        public virtual int Экзамен_Update(Nullable<int> экзамен, Nullable<System.DateTime> новая_дата)
        {
            var экзаменParameter = экзамен.HasValue ?
                new ObjectParameter("Экзамен", экзамен) :
                new ObjectParameter("Экзамен", typeof(int));
    
            var новая_датаParameter = новая_дата.HasValue ?
                new ObjectParameter("Новая_дата", новая_дата) :
                new ObjectParameter("Новая_дата", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Экзамен_Update", экзаменParameter, новая_датаParameter);
        }
    }
}
